{"version":3,"sources":["../sources/util.ts"],"names":["isElement","node","nodeType","ELEMENT_NODE","isHTMLTableCaptionElement","tagName","isHTMLInputElement","isHTMLSelectElement","isHTMLTableElement","isHTMLTextAreaElement","safeWindow","ownerDocument","defaultView","TypeError","isHTMLFieldSetElement","isHTMLLegendElement"],"mappings":";;;;;;;;;;;;;AAAO,SAASA,SAAT,CAAmBC,IAAnB,EAAuD;AAC7D,SAAOA,IAAI,KAAK,IAAT,IAAiBA,IAAI,CAACC,QAAL,KAAkBD,IAAI,CAACE,YAA/C;AACA;;AAEM,SAASC,yBAAT,CACNH,IADM,EAE4B;AAClC,SAAOD,SAAS,CAACC,IAAD,CAAT,IAAmBA,IAAI,CAACI,OAAL,KAAiB,SAA3C;AACA;;AAEM,SAASC,kBAAT,CACNL,IADM,EAEqB;AAC3B,SAAOD,SAAS,CAACC,IAAD,CAAT,IAAmBA,IAAI,CAACI,OAAL,KAAiB,OAA3C;AACA;;AAEM,SAASE,mBAAT,CACNN,IADM,EAEsB;AAC5B,SAAOD,SAAS,CAACC,IAAD,CAAT,IAAmBA,IAAI,CAACI,OAAL,KAAiB,QAA3C;AACA;;AAEM,SAASG,kBAAT,CACNP,IADM,EAEqB;AAC3B,SAAOD,SAAS,CAACC,IAAD,CAAT,IAAmBA,IAAI,CAACI,OAAL,KAAiB,OAA3C;AACA;;AAEM,SAASI,qBAAT,CACNR,IADM,EAEwB;AAC9B,SAAOD,SAAS,CAACC,IAAD,CAAT,IAAmBA,IAAI,CAACI,OAAL,KAAiB,UAA3C;AACA;;AAEM,SAASK,UAAT,CAAoBT,IAApB,EAAwC;AAAA,aAE7CA,IAAI,CAACU,aAAL,KAAuB,IAAvB,GAA+BV,IAA/B,GAAmDA,IAAI,CAACU,aAFX;AAAA,MACtCC,WADsC,QACtCA,WADsC;;AAI9C,MAAIA,WAAW,KAAK,IAApB,EAA0B;AACzB,UAAM,IAAIC,SAAJ,CAAc,qBAAd,CAAN;AACA;;AACD,SAAOD,WAAP;AACA;;AAEM,SAASE,qBAAT,CACNb,IADM,EAEwB;AAC9B,SAAOD,SAAS,CAACC,IAAD,CAAT,IAAmBA,IAAI,CAACI,OAAL,KAAiB,UAA3C;AACA;;AAEM,SAASU,mBAAT,CACNd,IADM,EAEsB;AAC5B,SAAOD,SAAS,CAACC,IAAD,CAAT,IAAmBA,IAAI,CAACI,OAAL,KAAiB,QAA3C;AACA","sourcesContent":["export function isElement(node: Node | null): node is Element {\n\treturn node !== null && node.nodeType === node.ELEMENT_NODE;\n}\n\nexport function isHTMLTableCaptionElement(\n\tnode: Node | null\n): node is HTMLTableCaptionElement {\n\treturn isElement(node) && node.tagName === \"CAPTION\";\n}\n\nexport function isHTMLInputElement(\n\tnode: Node | null\n): node is HTMLInputElement {\n\treturn isElement(node) && node.tagName === \"INPUT\";\n}\n\nexport function isHTMLSelectElement(\n\tnode: Node | null\n): node is HTMLSelectElement {\n\treturn isElement(node) && node.tagName === \"SELECT\";\n}\n\nexport function isHTMLTableElement(\n\tnode: Node | null\n): node is HTMLTableElement {\n\treturn isElement(node) && node.tagName === \"TABLE\";\n}\n\nexport function isHTMLTextAreaElement(\n\tnode: Node | null\n): node is HTMLTextAreaElement {\n\treturn isElement(node) && node.tagName === \"TEXTAREA\";\n}\n\nexport function safeWindow(node: Node): Window {\n\tconst { defaultView } =\n\t\tnode.ownerDocument === null ? (node as Document) : node.ownerDocument;\n\n\tif (defaultView === null) {\n\t\tthrow new TypeError(\"no window available\");\n\t}\n\treturn defaultView;\n}\n\nexport function isHTMLFieldSetElement(\n\tnode: Node | null\n): node is HTMLFieldSetElement {\n\treturn isElement(node) && node.tagName === \"FIELDSET\";\n}\n\nexport function isHTMLLegendElement(\n\tnode: Node | null\n): node is HTMLLegendElement {\n\treturn isElement(node) && node.tagName === \"LEGEND\";\n}\n"],"file":"util.js"}