{"ast":null,"code":"var _jsxFileName = \"/Users/yulinfeng/Development/react-playground/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      text: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DragableTextList, {\n      items: this.state.items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"input_dragable_text\",\n      onChange: this.handleChange,\n      value: this.state.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, \"input\")))));\n  }\n\n  handleChange(e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.text.length === 0) {\n      return;\n    }\n\n    const newItem = {\n      text: this.state.text,\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n\n}\n\nclass DragableTextList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.items = props.items;\n  }\n\n  render() {\n    const elements = [];\n    const div_texts = [\"a\", \"b\"];\n\n    for (const text of div_texts.entries()) {\n      elements.push( /*#__PURE__*/React.createElement(DragableDiv, {\n        value: text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, elements);\n  }\n\n}\n\nfunction DragableDiv(content) {\n  dragElement(document.getElementById(\"dragable_div\"));\n\n  function dragElement(elmnt) {\n    var pos1 = 0,\n        pos2 = 0,\n        pos3 = 0,\n        pos4 = 0;\n\n    if (document.getElementById(elmnt.id + \"header\")) {\n      /* if present, the header is where you move the DIV from:*/\n      document.getElementById(elmnt.id + \"header\").onmousedown = dragMouseDown;\n    } else {\n      /* otherwise, move the DIV from anywhere inside the DIV:*/\n      elmnt.onmousedown = dragMouseDown;\n    }\n\n    function dragMouseDown(e) {\n      e = e || window.event;\n      e.preventDefault(); // get the mouse cursor position at startup:\n\n      pos3 = e.clientX;\n      pos4 = e.clientY;\n      document.onmouseup = closeDragElement; // call a function whenever the cursor moves:\n\n      document.onmousemove = elementDrag;\n    }\n\n    function elementDrag(e) {\n      e = e || window.event;\n      e.preventDefault(); // calculate the new cursor position:\n\n      pos1 = pos3 - e.clientX;\n      pos2 = pos4 - e.clientY;\n      pos3 = e.clientX;\n      pos4 = e.clientY; // set the element's new position:\n\n      elmnt.style.top = elmnt.offsetTop - pos2 + \"px\";\n      elmnt.style.left = elmnt.offsetLeft - pos1 + \"px\";\n    }\n\n    function closeDragElement() {\n      /* stop moving when mouse button is released:*/\n      document.onmouseup = null;\n      document.onmousemove = null;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"dragable_div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"mydivheader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, content.value));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yulinfeng/Development/react-playground/src/App.js"],"names":["React","App","Component","constructor","props","state","items","text","handleChange","bind","handleSubmit","render","e","setState","target","value","preventDefault","length","newItem","id","Date","now","concat","DragableTextList","elements","div_texts","entries","push","DragableDiv","content","dragElement","document","getElementById","elmnt","pos1","pos2","pos3","pos4","onmousedown","dragMouseDown","window","event","clientX","clientY","onmouseup","closeDragElement","onmousemove","elementDrag","style","top","offsetTop","left","offsetLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { items: [], text: '' };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <DragableTextList items={this.state.items}/>\n            <form onSubmit={this.handleSubmit}>\n              <input \n              id=\"input_dragable_text\"\n              onChange={this.handleChange}\n              value={this.state.text}\n              />\n              <button>\n                input\n              </button>\n            </form>\n          </div>\n        </header>\n      </div>\n    );\n  }\n\n  handleChange(e) {\n    this.setState({ text: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.text.length === 0) {\n      return;\n    }\n    const newItem = {\n      text: this.state.text,\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n}\n\n\nclass DragableTextList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.items = props.items\n  }\n\n  render() {\n    const elements = [];\n    const div_texts = [\"a\", \"b\"]\n\n    for(const text of div_texts.entries()) {\n      elements.push(<DragableDiv value={text}></DragableDiv>)\n    }\n    return (\n      <div>\n        {elements}\n      </div>\n    )\n  }\n}\n\n\nfunction DragableDiv(content) {\n  dragElement(document.getElementById(\"dragable_div\"));\n    \n    function dragElement(elmnt) {\n      var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n      if (document.getElementById(elmnt.id + \"header\")) {\n        /* if present, the header is where you move the DIV from:*/\n        document.getElementById(elmnt.id + \"header\").onmousedown = dragMouseDown;\n      } else {\n        /* otherwise, move the DIV from anywhere inside the DIV:*/\n        elmnt.onmousedown = dragMouseDown;\n      }\n    \n      function dragMouseDown(e) {\n        e = e || window.event;\n        e.preventDefault();\n        // get the mouse cursor position at startup:\n        pos3 = e.clientX;\n        pos4 = e.clientY;\n        document.onmouseup = closeDragElement;\n        // call a function whenever the cursor moves:\n        document.onmousemove = elementDrag;\n      }\n    \n      function elementDrag(e) {\n        e = e || window.event;\n        e.preventDefault();\n        // calculate the new cursor position:\n        pos1 = pos3 - e.clientX;\n        pos2 = pos4 - e.clientY;\n        pos3 = e.clientX;\n        pos4 = e.clientY;\n        // set the element's new position:\n        elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\n        elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\n      }\n    \n      function closeDragElement() {\n        /* stop moving when mouse button is released:*/\n        document.onmouseup = null;\n        document.onmousemove = null;\n      }\n    }\n  return (\n    <div id=\"dragable_div\">\n      <div id=\"mydivheader\">{content.value}</div>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}