{"ast":null,"code":"var _jsxFileName = \"/Users/yulinfeng/Development/react-playground/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      items: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DragableTextList, {\n      items: this.state.items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"input_dragable_text\",\n      onChange: this.handleChange,\n      value: this.state.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, \"input\")))));\n  }\n\n  handleChange(e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.text.length === 0) {\n      return;\n    }\n\n    const newItem = {\n      text: this.state.text\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n\n}\n\nclass DragableTextList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.items = props.items;\n  }\n\n  render() {\n    const elements = [];\n    const text_array = this.props.items; //[{text: \"a\"}]\n    //console.log()\n\n    for (const item of text_array) {\n      elements.push( /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, elements);\n  }\n\n}\n\nclass Draggable extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this._relX = 0;\n    this._relY = 0;\n    this._ref = React.createRef();\n\n    this._onMouseDown = event => {\n      if (event.button !== 0) {\n        return;\n      }\n\n      const {\n        scrollLeft,\n        scrollTop,\n        clientLeft,\n        clientTop\n      } = document.body; // Try to avoid calling `getBoundingClientRect` if you know the size\n      // of the moving element from the beginning. It forces reflow and is\n      // the laggiest part of the code right now. Luckily it's called only\n      // once per click.\n\n      const {\n        left,\n        top\n      } = this._ref.current.getBoundingClientRect();\n\n      this._relX = event.pageX - (left + scrollLeft - clientLeft);\n      this._relY = event.pageY - (top + scrollTop - clientTop);\n      document.addEventListener('mousemove', this._onMouseMove);\n      document.addEventListener('mouseup', this._onMouseUp);\n      event.preventDefault();\n    };\n\n    this._onMouseUp = event => {\n      document.removeEventListener('mousemove', this._onMouseMove);\n      document.removeEventListener('mouseup', this._onMouseUp);\n      event.preventDefault();\n    };\n\n    this._onMouseMove = event => {\n      this.props.onMove(event.pageX - this._relX, event.pageY - this._relY);\n      event.preventDefault();\n    };\n\n    this._update = throttle(() => {\n      const {\n        x,\n        y\n      } = this.props;\n      this._ref.current.style.transform = `translate(${x}px, ${y}px)`;\n    });\n  }\n\n  componentDidMount() {\n    this._ref.current.addEventListener('mousedown', this._onMouseDown);\n\n    this._update();\n  }\n\n  componentDidUpdate() {\n    this._update();\n  }\n\n  componentWillUnmount() {\n    this._ref.current.removeEventListener('mousedown', this._onMouseDown);\n\n    this._update.cancel();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"draggable\",\n      ref: this._ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, this.props.children);\n  }\n\n}\n\nclass Test extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      x: 100,\n      y: 200\n    };\n\n    this._move = (x, y) => this.setState({\n      x,\n      y\n    });\n  }\n\n  // you can implement grid snapping logic or whatever here\n\n  /*\n  _move = (x, y) => this.setState({\n      x: ~~((x - 5) / 10) * 10 + 5,\n      y: ~~((y - 5) / 10) * 10 + 5,\n  });\n  */\n  render() {\n    const {\n      x,\n      y\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Draggable, {\n      x: x,\n      y: y,\n      onMove: this._move,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, \"Drag me\");\n  }\n\n}\n/*\nfunction DragableDiv(content) {\n  const div_id =Date.now()\n  return (\n    <div class=\"dragable_div\" id={div_id}>\n      <div class=\"mydivheader\" id={div_id}>{content.value}</div>\n    </div>\n  )\n}\n*/\n\n\nexport default App;","map":{"version":3,"sources":["/Users/yulinfeng/Development/react-playground/src/App.js"],"names":["React","App","Component","constructor","props","state","text","items","handleChange","bind","handleSubmit","render","e","setState","target","value","preventDefault","length","newItem","concat","DragableTextList","elements","text_array","item","push","Draggable","PureComponent","_relX","_relY","_ref","createRef","_onMouseDown","event","button","scrollLeft","scrollTop","clientLeft","clientTop","document","body","left","top","current","getBoundingClientRect","pageX","pageY","addEventListener","_onMouseMove","_onMouseUp","removeEventListener","onMove","_update","throttle","x","y","style","transform","componentDidMount","componentDidUpdate","componentWillUnmount","cancel","children","Test","_move"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { text: '', items: [] };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <DragableTextList items={this.state.items}/>\n            <form onSubmit={this.handleSubmit}>\n              <input \n              id=\"input_dragable_text\"\n              onChange={this.handleChange}\n              value={this.state.text}\n              />\n              <button>\n                input\n              </button>\n            </form>\n          </div>\n        </header>\n      </div>\n    );\n  }\n\n  handleChange(e) {\n    this.setState({ text: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.text.length === 0) {\n      return;\n    }\n    const newItem = {\n      text: this.state.text\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n}\n\n\nclass DragableTextList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.items = props.items\n  }\n\n  render() {\n    const elements = [];\n    const text_array = this.props.items //[{text: \"a\"}]\n    //console.log()\n    for(const item of text_array) {\n      elements.push(<Text />)\n    }\n    return (\n      <div>\n        {elements}\n      </div>\n    )\n  }\n}\n\nclass Draggable extends React.PureComponent {\n  _relX = 0;\n  _relY = 0;\n  _ref = React.createRef();\n\n  _onMouseDown = (event) => {\n      if (event.button !== 0) {\n          return;\n      }\n      const {scrollLeft, scrollTop, clientLeft, clientTop} = document.body;\n      // Try to avoid calling `getBoundingClientRect` if you know the size\n      // of the moving element from the beginning. It forces reflow and is\n      // the laggiest part of the code right now. Luckily it's called only\n      // once per click.\n      const {left, top} = this._ref.current.getBoundingClientRect();\n      this._relX = event.pageX - (left + scrollLeft - clientLeft);\n      this._relY = event.pageY - (top + scrollTop - clientTop);\n      document.addEventListener('mousemove', this._onMouseMove);\n      document.addEventListener('mouseup', this._onMouseUp);\n      event.preventDefault();\n  };\n\n  _onMouseUp = (event) => {\n      document.removeEventListener('mousemove', this._onMouseMove);\n      document.removeEventListener('mouseup', this._onMouseUp);\n      event.preventDefault();\n  };\n\n  _onMouseMove = (event) => {\n      this.props.onMove(\n          event.pageX - this._relX,\n          event.pageY - this._relY,\n      );\n      event.preventDefault();\n  };\n\n  _update = throttle(() => {\n      const {x, y} = this.props;\n      this._ref.current.style.transform = `translate(${x}px, ${y}px)`;\n  });\n\n  componentDidMount() {\n      this._ref.current.addEventListener('mousedown', this._onMouseDown);\n      this._update();\n  }\n\n  componentDidUpdate() {\n      this._update();\n  }\n\n  componentWillUnmount() {\n      this._ref.current.removeEventListener('mousedown', this._onMouseDown);\n      this._update.cancel();\n  }\n\n  render() {\n      return (\n          <div className=\"draggable\" ref={this._ref}>\n              {this.props.children}\n          </div>\n      );\n  }\n}\n\nclass Test extends React.PureComponent {\n  state = {\n      x: 100,\n      y: 200,\n  };\n\n  _move = (x, y) => this.setState({x, y});\n\n  // you can implement grid snapping logic or whatever here\n  /*\n  _move = (x, y) => this.setState({\n      x: ~~((x - 5) / 10) * 10 + 5,\n      y: ~~((y - 5) / 10) * 10 + 5,\n  });\n  */\n\n  render() {\n      const {x, y} = this.state;\n      return (\n          <Draggable x={x} y={y} onMove={this._move}>\n              Drag me\n          </Draggable>\n      );\n  }\n}\n\n\n\n/*\nfunction DragableDiv(content) {\n  const div_id =Date.now()\n  return (\n    <div class=\"dragable_div\" id={div_id}>\n      <div class=\"mydivheader\" id={div_id}>{content.value}</div>\n    </div>\n  )\n}\n*/\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}