{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Util_1 = require(\"../Util\");\n\nvar Factory_1 = require(\"../Factory\");\n\nvar Shape_1 = require(\"../Shape\");\n\nvar Global_1 = require(\"../Global\");\n\nvar Validators_1 = require(\"../Validators\");\n\nvar Global_2 = require(\"../Global\");\n\nvar AUTO = 'auto',\n    CENTER = 'center',\n    JUSTIFY = 'justify',\n    CHANGE_KONVA = 'Change.konva',\n    CONTEXT_2D = '2d',\n    DASH = '-',\n    LEFT = 'left',\n    TEXT = 'text',\n    TEXT_UPPER = 'Text',\n    TOP = 'top',\n    BOTTOM = 'bottom',\n    MIDDLE = 'middle',\n    NORMAL = 'normal',\n    PX_SPACE = 'px ',\n    SPACE = ' ',\n    RIGHT = 'right',\n    WORD = 'word',\n    CHAR = 'char',\n    NONE = 'none',\n    ELLIPSIS = 'â€¦',\n    ATTR_CHANGE_LIST = ['fontFamily', 'fontSize', 'fontStyle', 'fontVariant', 'padding', 'align', 'verticalAlign', 'lineHeight', 'text', 'width', 'height', 'wrap', 'ellipsis', 'letterSpacing'],\n    attrChangeListLen = ATTR_CHANGE_LIST.length;\nvar dummyContext;\n\nfunction getDummyContext() {\n  if (dummyContext) {\n    return dummyContext;\n  }\n\n  dummyContext = Util_1.Util.createCanvasElement().getContext(CONTEXT_2D);\n  return dummyContext;\n}\n\nfunction _fillFunc(context) {\n  context.fillText(this._partialText, this._partialTextX, this._partialTextY);\n}\n\nfunction _strokeFunc(context) {\n  context.strokeText(this._partialText, this._partialTextX, this._partialTextY);\n}\n\nfunction checkDefaultFill(config) {\n  config = config || {};\n\n  if (!config.fillLinearGradientColorStops && !config.fillRadialGradientColorStops && !config.fillPatternImage) {\n    config.fill = config.fill || 'black';\n  }\n\n  return config;\n}\n\nvar trimRight = String.prototype.trimRight || function polyfill() {\n  return this.replace(/[\\s\\xa0]+$/, '');\n};\n\nvar Text = function (_super) {\n  __extends(Text, _super);\n\n  function Text(config) {\n    var _this = _super.call(this, checkDefaultFill(config)) || this;\n\n    _this._partialTextX = 0;\n    _this._partialTextY = 0;\n\n    for (var n = 0; n < attrChangeListLen; n++) {\n      _this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, _this._setTextData);\n    }\n\n    _this._setTextData();\n\n    return _this;\n  }\n\n  Text.prototype._sceneFunc = function (context) {\n    var padding = this.padding(),\n        fontSize = this.fontSize(),\n        lineHeightPx = this.lineHeight() * fontSize,\n        textArr = this.textArr,\n        textArrLen = textArr.length,\n        verticalAlign = this.verticalAlign(),\n        alignY = 0,\n        align = this.align(),\n        totalWidth = this.getWidth(),\n        letterSpacing = this.letterSpacing(),\n        fill = this.fill(),\n        textDecoration = this.textDecoration(),\n        shouldUnderline = textDecoration.indexOf('underline') !== -1,\n        shouldLineThrough = textDecoration.indexOf('line-through') !== -1,\n        n;\n    var translateY = 0;\n    var translateY = lineHeightPx / 2;\n    var lineTranslateX = 0;\n    var lineTranslateY = 0;\n    context.setAttr('font', this._getContextFont());\n    context.setAttr('textBaseline', MIDDLE);\n    context.setAttr('textAlign', LEFT);\n\n    if (verticalAlign === MIDDLE) {\n      alignY = (this.getHeight() - textArrLen * lineHeightPx - padding * 2) / 2;\n    } else if (verticalAlign === BOTTOM) {\n      alignY = this.getHeight() - textArrLen * lineHeightPx - padding * 2;\n    }\n\n    context.translate(padding, alignY + padding);\n\n    for (n = 0; n < textArrLen; n++) {\n      var lineTranslateX = 0;\n      var lineTranslateY = 0;\n      var obj = textArr[n],\n          text = obj.text,\n          width = obj.width,\n          lastLine = n !== textArrLen - 1,\n          spacesNumber,\n          oneWord,\n          lineWidth;\n      context.save();\n\n      if (align === RIGHT) {\n        lineTranslateX += totalWidth - width - padding * 2;\n      } else if (align === CENTER) {\n        lineTranslateX += (totalWidth - width - padding * 2) / 2;\n      }\n\n      if (shouldUnderline) {\n        context.save();\n        context.beginPath();\n        context.moveTo(lineTranslateX, translateY + lineTranslateY + Math.round(fontSize / 2));\n        spacesNumber = text.split(' ').length - 1;\n        oneWord = spacesNumber === 0;\n        lineWidth = align === JUSTIFY && lastLine && !oneWord ? totalWidth - padding * 2 : width;\n        context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY + Math.round(fontSize / 2));\n        context.lineWidth = fontSize / 15;\n        context.strokeStyle = fill;\n        context.stroke();\n        context.restore();\n      }\n\n      if (shouldLineThrough) {\n        context.save();\n        context.beginPath();\n        context.moveTo(lineTranslateX, translateY + lineTranslateY);\n        spacesNumber = text.split(' ').length - 1;\n        oneWord = spacesNumber === 0;\n        lineWidth = align === JUSTIFY && lastLine && !oneWord ? totalWidth - padding * 2 : width;\n        context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY);\n        context.lineWidth = fontSize / 15;\n        context.strokeStyle = fill;\n        context.stroke();\n        context.restore();\n      }\n\n      if (letterSpacing !== 0 || align === JUSTIFY) {\n        spacesNumber = text.split(' ').length - 1;\n\n        for (var li = 0; li < text.length; li++) {\n          var letter = text[li];\n\n          if (letter === ' ' && n !== textArrLen - 1 && align === JUSTIFY) {\n            lineTranslateX += Math.floor((totalWidth - padding * 2 - width) / spacesNumber);\n          }\n\n          this._partialTextX = lineTranslateX;\n          this._partialTextY = translateY + lineTranslateY;\n          this._partialText = letter;\n          context.fillStrokeShape(this);\n          lineTranslateX += Math.round(this.measureSize(letter).width) + letterSpacing;\n        }\n      } else {\n        this._partialTextX = lineTranslateX;\n        this._partialTextY = translateY + lineTranslateY;\n        this._partialText = text;\n        context.fillStrokeShape(this);\n      }\n\n      context.restore();\n\n      if (textArrLen > 1) {\n        translateY += lineHeightPx;\n      }\n    }\n  };\n\n  Text.prototype._hitFunc = function (context) {\n    var width = this.getWidth(),\n        height = this.getHeight();\n    context.beginPath();\n    context.rect(0, 0, width, height);\n    context.closePath();\n    context.fillStrokeShape(this);\n  };\n\n  Text.prototype.setText = function (text) {\n    var str = Util_1.Util._isString(text) ? text : text === null || text === undefined ? '' : text + '';\n\n    this._setAttr(TEXT, str);\n\n    return this;\n  };\n\n  Text.prototype.getWidth = function () {\n    var isAuto = this.attrs.width === AUTO || this.attrs.width === undefined;\n    return isAuto ? this.getTextWidth() + this.padding() * 2 : this.attrs.width;\n  };\n\n  Text.prototype.getHeight = function () {\n    var isAuto = this.attrs.height === AUTO || this.attrs.height === undefined;\n    return isAuto ? this.fontSize() * this.textArr.length * this.lineHeight() + this.padding() * 2 : this.attrs.height;\n  };\n\n  Text.prototype.getTextWidth = function () {\n    return this.textWidth;\n  };\n\n  Text.prototype.getTextHeight = function () {\n    Util_1.Util.warn('text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.');\n    return this.textHeight;\n  };\n\n  Text.prototype.measureSize = function (text) {\n    var _context = getDummyContext(),\n        fontSize = this.fontSize(),\n        metrics;\n\n    _context.save();\n\n    _context.font = this._getContextFont();\n    metrics = _context.measureText(text);\n\n    _context.restore();\n\n    return {\n      width: metrics.width,\n      height: fontSize\n    };\n  };\n\n  Text.prototype._getContextFont = function () {\n    if (Global_1.Konva.UA.isIE) {\n      return this.fontStyle() + SPACE + this.fontSize() + PX_SPACE + this.fontFamily();\n    }\n\n    return this.fontStyle() + SPACE + this.fontVariant() + SPACE + this.fontSize() + PX_SPACE + this.fontFamily();\n  };\n\n  Text.prototype._addTextLine = function (line) {\n    if (this.align() === JUSTIFY) {\n      line = line.trim();\n    }\n\n    var width = this._getTextWidth(line);\n\n    return this.textArr.push({\n      text: line,\n      width: width\n    });\n  };\n\n  Text.prototype._getTextWidth = function (text) {\n    var letterSpacing = this.letterSpacing();\n    var length = text.length;\n    return getDummyContext().measureText(text).width + (length ? letterSpacing * (length - 1) : 0);\n  };\n\n  Text.prototype._setTextData = function () {\n    var lines = this.text().split('\\n'),\n        fontSize = +this.fontSize(),\n        textWidth = 0,\n        lineHeightPx = this.lineHeight() * fontSize,\n        width = this.attrs.width,\n        height = this.attrs.height,\n        fixedWidth = width !== AUTO && width !== undefined,\n        fixedHeight = height !== AUTO && height !== undefined,\n        padding = this.padding(),\n        maxWidth = width - padding * 2,\n        maxHeightPx = height - padding * 2,\n        currentHeightPx = 0,\n        wrap = this.wrap(),\n        shouldWrap = wrap !== NONE,\n        wrapAtWord = wrap !== CHAR && shouldWrap,\n        shouldAddEllipsis = this.ellipsis() && !shouldWrap;\n    this.textArr = [];\n    getDummyContext().font = this._getContextFont();\n    var additionalWidth = shouldAddEllipsis ? this._getTextWidth(ELLIPSIS) : 0;\n\n    for (var i = 0, max = lines.length; i < max; ++i) {\n      var line = lines[i];\n\n      var lineWidth = this._getTextWidth(line);\n\n      if (fixedWidth && lineWidth > maxWidth) {\n        while (line.length > 0) {\n          var low = 0,\n              high = line.length,\n              match = '',\n              matchWidth = 0;\n\n          while (low < high) {\n            var mid = low + high >>> 1,\n                substr = line.slice(0, mid + 1),\n                substrWidth = this._getTextWidth(substr) + additionalWidth;\n\n            if (substrWidth <= maxWidth) {\n              low = mid + 1;\n              match = substr + (shouldAddEllipsis ? ELLIPSIS : '');\n              matchWidth = substrWidth;\n            } else {\n              high = mid;\n            }\n          }\n\n          if (match) {\n            if (wrapAtWord) {\n              var wrapIndex;\n              var nextChar = line[match.length];\n              var nextIsSpaceOrDash = nextChar === SPACE || nextChar === DASH;\n\n              if (nextIsSpaceOrDash && matchWidth <= maxWidth) {\n                wrapIndex = match.length;\n              } else {\n                wrapIndex = Math.max(match.lastIndexOf(SPACE), match.lastIndexOf(DASH)) + 1;\n              }\n\n              if (wrapIndex > 0) {\n                low = wrapIndex;\n                match = match.slice(0, low);\n                matchWidth = this._getTextWidth(match);\n              }\n            }\n\n            match = match.trimRight();\n\n            this._addTextLine(match);\n\n            textWidth = Math.max(textWidth, matchWidth);\n            currentHeightPx += lineHeightPx;\n\n            if (!shouldWrap || fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\n              break;\n            }\n\n            line = line.slice(low);\n            line = line.trimLeft();\n\n            if (line.length > 0) {\n              lineWidth = this._getTextWidth(line);\n\n              if (lineWidth <= maxWidth) {\n                this._addTextLine(line);\n\n                currentHeightPx += lineHeightPx;\n                textWidth = Math.max(textWidth, lineWidth);\n                break;\n              }\n            }\n          } else {\n            break;\n          }\n        }\n      } else {\n        this._addTextLine(line);\n\n        currentHeightPx += lineHeightPx;\n        textWidth = Math.max(textWidth, lineWidth);\n      }\n\n      if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\n        break;\n      }\n    }\n\n    this.textHeight = fontSize;\n    this.textWidth = textWidth;\n  };\n\n  Text.prototype.getStrokeScaleEnabled = function () {\n    return true;\n  };\n\n  return Text;\n}(Shape_1.Shape);\n\nexports.Text = Text;\nText.prototype._fillFunc = _fillFunc;\nText.prototype._strokeFunc = _strokeFunc;\nText.prototype.className = TEXT_UPPER;\nText.prototype._attrsAffectingSize = ['text', 'fontSize', 'padding', 'wrap', 'lineHeight'];\n\nGlobal_2._registerNode(Text);\n\nFactory_1.Factory.overWriteSetter(Text, 'width', Validators_1.getNumberOrAutoValidator());\nFactory_1.Factory.overWriteSetter(Text, 'height', Validators_1.getNumberOrAutoValidator());\nFactory_1.Factory.addGetterSetter(Text, 'fontFamily', 'Arial');\nFactory_1.Factory.addGetterSetter(Text, 'fontSize', 12, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Text, 'fontStyle', NORMAL);\nFactory_1.Factory.addGetterSetter(Text, 'fontVariant', NORMAL);\nFactory_1.Factory.addGetterSetter(Text, 'padding', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Text, 'align', LEFT);\nFactory_1.Factory.addGetterSetter(Text, 'verticalAlign', TOP);\nFactory_1.Factory.addGetterSetter(Text, 'lineHeight', 1, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Text, 'wrap', WORD);\nFactory_1.Factory.addGetterSetter(Text, 'ellipsis', false);\nFactory_1.Factory.addGetterSetter(Text, 'letterSpacing', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Text, 'text', '', Validators_1.getStringValidator());\nFactory_1.Factory.addGetterSetter(Text, 'textDecoration', '');\nUtil_1.Collection.mapMethods(Text);","map":{"version":3,"sources":["/mnt/c/Users/anjul/OneDrive - Stony Brook University/Documents/infographics_generation/interface/node_modules/konva/lib/shapes/Text.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","Util_1","require","Factory_1","Shape_1","Global_1","Validators_1","Global_2","AUTO","CENTER","JUSTIFY","CHANGE_KONVA","CONTEXT_2D","DASH","LEFT","TEXT","TEXT_UPPER","TOP","BOTTOM","MIDDLE","NORMAL","PX_SPACE","SPACE","RIGHT","WORD","CHAR","NONE","ELLIPSIS","ATTR_CHANGE_LIST","attrChangeListLen","length","dummyContext","getDummyContext","Util","createCanvasElement","getContext","_fillFunc","context","fillText","_partialText","_partialTextX","_partialTextY","_strokeFunc","strokeText","checkDefaultFill","config","fillLinearGradientColorStops","fillRadialGradientColorStops","fillPatternImage","fill","trimRight","String","polyfill","replace","Text","_super","_this","call","n","on","_setTextData","_sceneFunc","padding","fontSize","lineHeightPx","lineHeight","textArr","textArrLen","verticalAlign","alignY","align","totalWidth","getWidth","letterSpacing","textDecoration","shouldUnderline","indexOf","shouldLineThrough","translateY","lineTranslateX","lineTranslateY","setAttr","_getContextFont","getHeight","translate","obj","text","width","lastLine","spacesNumber","oneWord","lineWidth","save","beginPath","moveTo","Math","round","split","lineTo","strokeStyle","stroke","restore","li","letter","floor","fillStrokeShape","measureSize","_hitFunc","height","rect","closePath","setText","str","_isString","undefined","_setAttr","isAuto","attrs","getTextWidth","textWidth","getTextHeight","warn","textHeight","_context","metrics","font","measureText","Konva","UA","isIE","fontStyle","fontFamily","fontVariant","_addTextLine","line","trim","_getTextWidth","push","lines","fixedWidth","fixedHeight","maxWidth","maxHeightPx","currentHeightPx","wrap","shouldWrap","wrapAtWord","shouldAddEllipsis","ellipsis","additionalWidth","i","max","low","high","match","matchWidth","mid","substr","slice","substrWidth","wrapIndex","nextChar","nextIsSpaceOrDash","lastIndexOf","trimLeft","getStrokeScaleEnabled","Shape","className","_attrsAffectingSize","_registerNode","Factory","overWriteSetter","getNumberOrAutoValidator","addGetterSetter","getNumberValidator","getStringValidator","Collection","mapMethods"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Util_1 = require(\"../Util\");\nvar Factory_1 = require(\"../Factory\");\nvar Shape_1 = require(\"../Shape\");\nvar Global_1 = require(\"../Global\");\nvar Validators_1 = require(\"../Validators\");\nvar Global_2 = require(\"../Global\");\nvar AUTO = 'auto', CENTER = 'center', JUSTIFY = 'justify', CHANGE_KONVA = 'Change.konva', CONTEXT_2D = '2d', DASH = '-', LEFT = 'left', TEXT = 'text', TEXT_UPPER = 'Text', TOP = 'top', BOTTOM = 'bottom', MIDDLE = 'middle', NORMAL = 'normal', PX_SPACE = 'px ', SPACE = ' ', RIGHT = 'right', WORD = 'word', CHAR = 'char', NONE = 'none', ELLIPSIS = 'â€¦', ATTR_CHANGE_LIST = [\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'fontVariant',\n    'padding',\n    'align',\n    'verticalAlign',\n    'lineHeight',\n    'text',\n    'width',\n    'height',\n    'wrap',\n    'ellipsis',\n    'letterSpacing'\n], attrChangeListLen = ATTR_CHANGE_LIST.length;\nvar dummyContext;\nfunction getDummyContext() {\n    if (dummyContext) {\n        return dummyContext;\n    }\n    dummyContext = Util_1.Util.createCanvasElement().getContext(CONTEXT_2D);\n    return dummyContext;\n}\nfunction _fillFunc(context) {\n    context.fillText(this._partialText, this._partialTextX, this._partialTextY);\n}\nfunction _strokeFunc(context) {\n    context.strokeText(this._partialText, this._partialTextX, this._partialTextY);\n}\nfunction checkDefaultFill(config) {\n    config = config || {};\n    if (!config.fillLinearGradientColorStops &&\n        !config.fillRadialGradientColorStops &&\n        !config.fillPatternImage) {\n        config.fill = config.fill || 'black';\n    }\n    return config;\n}\nvar trimRight = String.prototype.trimRight ||\n    function polyfill() {\n        return this.replace(/[\\s\\xa0]+$/, '');\n    };\nvar Text = (function (_super) {\n    __extends(Text, _super);\n    function Text(config) {\n        var _this = _super.call(this, checkDefaultFill(config)) || this;\n        _this._partialTextX = 0;\n        _this._partialTextY = 0;\n        for (var n = 0; n < attrChangeListLen; n++) {\n            _this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, _this._setTextData);\n        }\n        _this._setTextData();\n        return _this;\n    }\n    Text.prototype._sceneFunc = function (context) {\n        var padding = this.padding(), fontSize = this.fontSize(), lineHeightPx = this.lineHeight() * fontSize, textArr = this.textArr, textArrLen = textArr.length, verticalAlign = this.verticalAlign(), alignY = 0, align = this.align(), totalWidth = this.getWidth(), letterSpacing = this.letterSpacing(), fill = this.fill(), textDecoration = this.textDecoration(), shouldUnderline = textDecoration.indexOf('underline') !== -1, shouldLineThrough = textDecoration.indexOf('line-through') !== -1, n;\n        var translateY = 0;\n        var translateY = lineHeightPx / 2;\n        var lineTranslateX = 0;\n        var lineTranslateY = 0;\n        context.setAttr('font', this._getContextFont());\n        context.setAttr('textBaseline', MIDDLE);\n        context.setAttr('textAlign', LEFT);\n        if (verticalAlign === MIDDLE) {\n            alignY = (this.getHeight() - textArrLen * lineHeightPx - padding * 2) / 2;\n        }\n        else if (verticalAlign === BOTTOM) {\n            alignY = this.getHeight() - textArrLen * lineHeightPx - padding * 2;\n        }\n        context.translate(padding, alignY + padding);\n        for (n = 0; n < textArrLen; n++) {\n            var lineTranslateX = 0;\n            var lineTranslateY = 0;\n            var obj = textArr[n], text = obj.text, width = obj.width, lastLine = n !== textArrLen - 1, spacesNumber, oneWord, lineWidth;\n            context.save();\n            if (align === RIGHT) {\n                lineTranslateX += totalWidth - width - padding * 2;\n            }\n            else if (align === CENTER) {\n                lineTranslateX += (totalWidth - width - padding * 2) / 2;\n            }\n            if (shouldUnderline) {\n                context.save();\n                context.beginPath();\n                context.moveTo(lineTranslateX, translateY + lineTranslateY + Math.round(fontSize / 2));\n                spacesNumber = text.split(' ').length - 1;\n                oneWord = spacesNumber === 0;\n                lineWidth =\n                    align === JUSTIFY && lastLine && !oneWord\n                        ? totalWidth - padding * 2\n                        : width;\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY + Math.round(fontSize / 2));\n                context.lineWidth = fontSize / 15;\n                context.strokeStyle = fill;\n                context.stroke();\n                context.restore();\n            }\n            if (shouldLineThrough) {\n                context.save();\n                context.beginPath();\n                context.moveTo(lineTranslateX, translateY + lineTranslateY);\n                spacesNumber = text.split(' ').length - 1;\n                oneWord = spacesNumber === 0;\n                lineWidth =\n                    align === JUSTIFY && lastLine && !oneWord\n                        ? totalWidth - padding * 2\n                        : width;\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY);\n                context.lineWidth = fontSize / 15;\n                context.strokeStyle = fill;\n                context.stroke();\n                context.restore();\n            }\n            if (letterSpacing !== 0 || align === JUSTIFY) {\n                spacesNumber = text.split(' ').length - 1;\n                for (var li = 0; li < text.length; li++) {\n                    var letter = text[li];\n                    if (letter === ' ' && n !== textArrLen - 1 && align === JUSTIFY) {\n                        lineTranslateX += Math.floor((totalWidth - padding * 2 - width) / spacesNumber);\n                    }\n                    this._partialTextX = lineTranslateX;\n                    this._partialTextY = translateY + lineTranslateY;\n                    this._partialText = letter;\n                    context.fillStrokeShape(this);\n                    lineTranslateX +=\n                        Math.round(this.measureSize(letter).width) + letterSpacing;\n                }\n            }\n            else {\n                this._partialTextX = lineTranslateX;\n                this._partialTextY = translateY + lineTranslateY;\n                this._partialText = text;\n                context.fillStrokeShape(this);\n            }\n            context.restore();\n            if (textArrLen > 1) {\n                translateY += lineHeightPx;\n            }\n        }\n    };\n    Text.prototype._hitFunc = function (context) {\n        var width = this.getWidth(), height = this.getHeight();\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n    };\n    Text.prototype.setText = function (text) {\n        var str = Util_1.Util._isString(text)\n            ? text\n            : text === null || text === undefined\n                ? ''\n                : text + '';\n        this._setAttr(TEXT, str);\n        return this;\n    };\n    Text.prototype.getWidth = function () {\n        var isAuto = this.attrs.width === AUTO || this.attrs.width === undefined;\n        return isAuto ? this.getTextWidth() + this.padding() * 2 : this.attrs.width;\n    };\n    Text.prototype.getHeight = function () {\n        var isAuto = this.attrs.height === AUTO || this.attrs.height === undefined;\n        return isAuto\n            ? this.fontSize() * this.textArr.length * this.lineHeight() +\n                this.padding() * 2\n            : this.attrs.height;\n    };\n    Text.prototype.getTextWidth = function () {\n        return this.textWidth;\n    };\n    Text.prototype.getTextHeight = function () {\n        Util_1.Util.warn('text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.');\n        return this.textHeight;\n    };\n    Text.prototype.measureSize = function (text) {\n        var _context = getDummyContext(), fontSize = this.fontSize(), metrics;\n        _context.save();\n        _context.font = this._getContextFont();\n        metrics = _context.measureText(text);\n        _context.restore();\n        return {\n            width: metrics.width,\n            height: fontSize\n        };\n    };\n    Text.prototype._getContextFont = function () {\n        if (Global_1.Konva.UA.isIE) {\n            return (this.fontStyle() +\n                SPACE +\n                this.fontSize() +\n                PX_SPACE +\n                this.fontFamily());\n        }\n        return (this.fontStyle() +\n            SPACE +\n            this.fontVariant() +\n            SPACE +\n            this.fontSize() +\n            PX_SPACE +\n            this.fontFamily());\n    };\n    Text.prototype._addTextLine = function (line) {\n        if (this.align() === JUSTIFY) {\n            line = line.trim();\n        }\n        var width = this._getTextWidth(line);\n        return this.textArr.push({ text: line, width: width });\n    };\n    Text.prototype._getTextWidth = function (text) {\n        var letterSpacing = this.letterSpacing();\n        var length = text.length;\n        return (getDummyContext().measureText(text).width +\n            (length ? letterSpacing * (length - 1) : 0));\n    };\n    Text.prototype._setTextData = function () {\n        var lines = this.text().split('\\n'), fontSize = +this.fontSize(), textWidth = 0, lineHeightPx = this.lineHeight() * fontSize, width = this.attrs.width, height = this.attrs.height, fixedWidth = width !== AUTO && width !== undefined, fixedHeight = height !== AUTO && height !== undefined, padding = this.padding(), maxWidth = width - padding * 2, maxHeightPx = height - padding * 2, currentHeightPx = 0, wrap = this.wrap(), shouldWrap = wrap !== NONE, wrapAtWord = wrap !== CHAR && shouldWrap, shouldAddEllipsis = this.ellipsis() && !shouldWrap;\n        this.textArr = [];\n        getDummyContext().font = this._getContextFont();\n        var additionalWidth = shouldAddEllipsis ? this._getTextWidth(ELLIPSIS) : 0;\n        for (var i = 0, max = lines.length; i < max; ++i) {\n            var line = lines[i];\n            var lineWidth = this._getTextWidth(line);\n            if (fixedWidth && lineWidth > maxWidth) {\n                while (line.length > 0) {\n                    var low = 0, high = line.length, match = '', matchWidth = 0;\n                    while (low < high) {\n                        var mid = (low + high) >>> 1, substr = line.slice(0, mid + 1), substrWidth = this._getTextWidth(substr) + additionalWidth;\n                        if (substrWidth <= maxWidth) {\n                            low = mid + 1;\n                            match = substr + (shouldAddEllipsis ? ELLIPSIS : '');\n                            matchWidth = substrWidth;\n                        }\n                        else {\n                            high = mid;\n                        }\n                    }\n                    if (match) {\n                        if (wrapAtWord) {\n                            var wrapIndex;\n                            var nextChar = line[match.length];\n                            var nextIsSpaceOrDash = nextChar === SPACE || nextChar === DASH;\n                            if (nextIsSpaceOrDash && matchWidth <= maxWidth) {\n                                wrapIndex = match.length;\n                            }\n                            else {\n                                wrapIndex =\n                                    Math.max(match.lastIndexOf(SPACE), match.lastIndexOf(DASH)) +\n                                        1;\n                            }\n                            if (wrapIndex > 0) {\n                                low = wrapIndex;\n                                match = match.slice(0, low);\n                                matchWidth = this._getTextWidth(match);\n                            }\n                        }\n                        match = match.trimRight();\n                        this._addTextLine(match);\n                        textWidth = Math.max(textWidth, matchWidth);\n                        currentHeightPx += lineHeightPx;\n                        if (!shouldWrap ||\n                            (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx)) {\n                            break;\n                        }\n                        line = line.slice(low);\n                        line = line.trimLeft();\n                        if (line.length > 0) {\n                            lineWidth = this._getTextWidth(line);\n                            if (lineWidth <= maxWidth) {\n                                this._addTextLine(line);\n                                currentHeightPx += lineHeightPx;\n                                textWidth = Math.max(textWidth, lineWidth);\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            else {\n                this._addTextLine(line);\n                currentHeightPx += lineHeightPx;\n                textWidth = Math.max(textWidth, lineWidth);\n            }\n            if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\n                break;\n            }\n        }\n        this.textHeight = fontSize;\n        this.textWidth = textWidth;\n    };\n    Text.prototype.getStrokeScaleEnabled = function () {\n        return true;\n    };\n    return Text;\n}(Shape_1.Shape));\nexports.Text = Text;\nText.prototype._fillFunc = _fillFunc;\nText.prototype._strokeFunc = _strokeFunc;\nText.prototype.className = TEXT_UPPER;\nText.prototype._attrsAffectingSize = [\n    'text',\n    'fontSize',\n    'padding',\n    'wrap',\n    'lineHeight'\n];\nGlobal_2._registerNode(Text);\nFactory_1.Factory.overWriteSetter(Text, 'width', Validators_1.getNumberOrAutoValidator());\nFactory_1.Factory.overWriteSetter(Text, 'height', Validators_1.getNumberOrAutoValidator());\nFactory_1.Factory.addGetterSetter(Text, 'fontFamily', 'Arial');\nFactory_1.Factory.addGetterSetter(Text, 'fontSize', 12, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Text, 'fontStyle', NORMAL);\nFactory_1.Factory.addGetterSetter(Text, 'fontVariant', NORMAL);\nFactory_1.Factory.addGetterSetter(Text, 'padding', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Text, 'align', LEFT);\nFactory_1.Factory.addGetterSetter(Text, 'verticalAlign', TOP);\nFactory_1.Factory.addGetterSetter(Text, 'lineHeight', 1, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Text, 'wrap', WORD);\nFactory_1.Factory.addGetterSetter(Text, 'ellipsis', false);\nFactory_1.Factory.addGetterSetter(Text, 'letterSpacing', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Text, 'text', '', Validators_1.getStringValidator());\nFactory_1.Factory.addGetterSetter(Text, 'textDecoration', '');\nUtil_1.Collection.mapMethods(Text);\n"]},"metadata":{},"sourceType":"script"}